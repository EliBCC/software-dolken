# This file was autogenerated by the modm cmake builder.
# Do not modify!

CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

INCLUDE(scripts/toolchain.cmake)

IF(NOT BOARD_NAME)
	MESSAGE(FATAL_ERROR "Board name must be defined")
ENDIF()

PROJECT(${BOARD_NAME})

IF(NOT CMAKE_CONFIGURATION_TYPES AND NOT CMAKE_BUILD_TYPE)
   SET(CMAKE_BUILD_TYPE Release)
ENDIF()

FILE(GLOB_RECURSE APP_STARTUP *.sx)
SET_SOURCE_FILES_PROPERTIES(${APP_STARTUP} PROPERTIES LANGUAGE CXX)

MACRO(GET_SOURCES OUTPUT SRC_DIR)
	FILE(GLOB_RECURSE ${OUTPUT} ${SRC_DIR}/*.c ${SRC_DIR}/*.cpp ${SRC_DIR}/*.h ${SRC_DIR}/*.hpp ${SRC_DIR}/*.sx)
ENDMACRO(GET_SOURCES)

GET_SOURCES(MODM_SRC modm/src)
GET_SOURCES(COMMON_SRC src/common)
GET_SOURCES(BOARD_SRC src/${BOARD_NAME})

SET(SOURCE_FILES
    ${MODM_SRC}
    ${COMMON_SRC}
    ${BOARD_SRC}
)

INCLUDE_DIRECTORIES(
    modm/ext
    modm/ext/cmsis/core
    modm/ext/cmsis/device
    modm/src
    src
)
INCLUDE_DIRECTORIES(SYSTEM include)

# SET(PROJECT_PLATFORM   stm32)
# SET(PROJECT_COMPILER   gcc)
# SET(PROJECT_PART       stm32f446ret)
# SET(PROJECT_FAMILY     f4)
# SET(PROJECT_CORE       cortex-m4)
# SET(PROJECT_NAME       can_test)
# SET(PROJECT_BUILD_PATH ./build)
#
# INCLUDE(./modm/cmake/report-build-options.cmake)

if ( APPLE )
    string ( REPLACE "-Wl,-search_paths_first" "" CMAKE_C_LINK_FLAGS ${CMAKE_C_LINK_FLAGS} )
    string ( REPLACE "-Wl,-search_paths_first" "" CMAKE_CXX_LINK_FLAGS ${CMAKE_CXX_LINK_FLAGS} )
endif ()

ADD_EXECUTABLE(${CMAKE_PROJECT_NAME} ${SOURCE_FILES})
SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME} PROPERTIES SUFFIX ".elf")

IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
	TARGET_COMPILE_DEFINITIONS(${CMAKE_PROJECT_NAME} PUBLIC "MODM_DEBUG_BUILD")
ENDIF()
ADD_CUSTOM_TARGET(${CMAKE_PROJECT_NAME}.bin ALL DEPENDS ${CMAKE_PROJECT_NAME} COMMAND ${CMAKE_OBJCOPY} -Obinary ${CMAKE_PROJECT_NAME}.elf ${CMAKE_PROJECT_NAME}.bin)
ADD_CUSTOM_TARGET(${CMAKE_PROJECT_NAME}.hex ALL DEPENDS ${CMAKE_PROJECT_NAME} COMMAND ${CMAKE_OBJCOPY} -Oihex ${CMAKE_PROJECT_NAME}.elf ${CMAKE_PROJECT_NAME}.hex)
ADD_CUSTOM_TARGET(${CMAKE_PROJECT_NAME}.lss ALL DEPENDS ${CMAKE_PROJECT_NAME} COMMAND ${CMAKE_OBJDUMP}  -x -s -S -l -w ${CMAKE_PROJECT_NAME}.elf > ${CMAKE_PROJECT_NAME}.lss)
ADD_CUSTOM_COMMAND(TARGET ${CMAKE_PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_SIZE} ARGS ${CMAKE_PROJECT_NAME}.elf)
