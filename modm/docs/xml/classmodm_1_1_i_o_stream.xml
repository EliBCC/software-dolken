<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classmodm_1_1_i_o_stream" kind="class" language="C++" prot="public">
    <compoundname>modm::IOStream</compoundname>
    <derivedcompoundref refid="classmodm_1_1log_1_1_logger" prot="public" virt="non-virtual">modm::log::Logger</derivedcompoundref>
    <includes refid="iostream_8hpp" local="no">modm/io/iostream.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classmodm_1_1_i_o_stream_1a0589c8e99811fbaad19d246f189303d6" prot="private" static="no" strong="yes">
        <type></type>
        <name>Mode</name>
        <enumvalue id="classmodm_1_1_i_o_stream_1a0589c8e99811fbaad19d246f189303d6a76b8d0dcd02ccaf203c167ced6d7ef31" prot="private">
          <name>Ascii</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1_i_o_stream_1a0589c8e99811fbaad19d246f189303d6a3a1733e5ccccdb1b700352409ce97c89" prot="private">
          <name>Hexadecimal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1_i_o_stream_1a0589c8e99811fbaad19d246f189303d6a6ce976e8f061b2b5cfe4d0c50c3405dd" prot="private">
          <name>Binary</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="452" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="450" bodyend="456"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmodm_1_1_i_o_stream_1a49b0b8fa73cc3a280495b7675c02c63d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* modm::IOStream::myfunc) ()</definition>
        <argsstring>)()</argsstring>
        <name>myfunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="370" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1_i_o_stream_1af67d8029d874a9f778eef28069f1d9c2" prot="public" static="yes" mutable="no">
        <type>constexpr char</type>
        <definition>constexpr char modm::IOStream::eof</definition>
        <argsstring></argsstring>
        <name>eof</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="62" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmodm_1_1_i_o_stream_1ab049807b02e3bfa506927fcf2c04153e" prot="private" static="no" mutable="no">
        <type><ref refid="classmodm_1_1_i_o_device" kindref="compound">IODevice</ref> *const</type>
        <definition>IODevice* const modm::IOStream::device</definition>
        <argsstring></argsstring>
        <name>device</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="464" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_i_o_stream_1afe5f581da11424ade2fdef95646f94dd" prot="private" static="no" mutable="no">
        <type>Mode</type>
        <definition>Mode modm::IOStream::mode</definition>
        <argsstring></argsstring>
        <name>mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="465" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="465" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a64057d140a21785681e4385c66795245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::IOStream::IOStream</definition>
        <argsstring>(IODevice &amp;device)</argsstring>
        <name>IOStream</name>
        <param>
          <type><ref refid="classmodm_1_1_i_o_device" kindref="compound">IODevice</ref> &amp;</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>device to write the stream to</para></parameterdescription>
</parameteritem>
</parameterlist>
<programlisting><codeline><highlight class="normal">MyIODevice<sp/>device;</highlight></codeline>
<codeline><highlight class="normal">IOStream<sp/>stream(<sp/>device<sp/>);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a58090461890e8414dc84f0c860300f6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::write</definition>
        <argsstring>(char c)</argsstring>
        <name>write</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="56" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1aa0e3a3af8ec3a8d8d3f62e94845f319b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::get</definition>
        <argsstring>(char &amp;c)</argsstring>
        <name>get</name>
        <param>
          <type>char &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Reads one character and returns it if available. Otherwise, returns <ref refid="classmodm_1_1_i_o_stream_1af67d8029d874a9f778eef28069f1d9c2" kindref="member">IOStream::eof</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="66" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="66" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1ad2386cdd6a5a0775039755c4f7ea18af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::get</definition>
        <argsstring>(char *s, size_t n)</argsstring>
        <name>get</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reads characters into NULL delimited c string in contrast to the standard implementation, this does not care about newline characters in the input </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="78" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="78" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1ac425933869efdb3fa5058b1b040b6001" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::get</definition>
        <argsstring>(char(&amp;s)[N])</argsstring>
        <name>get</name>
        <param>
          <type>char(&amp;)</type>
          <declname>s</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="98" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a3610c83f827855e9ea103c85bf45069e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="106" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="106" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a2ec24a2c020997b5704df1d9ac99264c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::bin</definition>
        <argsstring>()</argsstring>
        <name>bin</name>
        <briefdescription>
<para>set the output mode to binary style for <computeroutput>char</computeroutput> and <computeroutput>char*</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="115" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a067f916e909f11b5c149d72a27d60b16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::hex</definition>
        <argsstring>()</argsstring>
        <name>hex</name>
        <briefdescription>
<para>set the output mode to hexadecimal style for <computeroutput>char</computeroutput> and <computeroutput>char*</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="123" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1ab5a45629b6ac8a07828d31a417cae5f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::ascii</definition>
        <argsstring>()</argsstring>
        <name>ascii</name>
        <briefdescription>
<para>set the output mode to ASCII style for <computeroutput>char</computeroutput> and <computeroutput>char*</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="131" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="131" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a7b0b488829c7138e74d16aefe47c61de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::operator&lt;&lt;</definition>
        <argsstring>(const unsigned char &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const unsigned char &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="138" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="139" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a0668abdde6faee6d888afcfd69e59866" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::operator&lt;&lt;</definition>
        <argsstring>(const bool &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const bool &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="153" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="154" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a87f8239c773bcaeed5e820afe9e66655" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::operator&lt;&lt;</definition>
        <argsstring>(const char &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const char &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="180" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="181" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a0d9e320adda5f3bfda2118a8926dbf19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::operator&lt;&lt;</definition>
        <argsstring>(const uint16_t &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const uint16_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="195" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="196" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a3691a160fcf337996e425f5a8ecb7a0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::operator&lt;&lt;</definition>
        <argsstring>(const int16_t &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const int16_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="212" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="213" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a394222692f31c79e71992be1759cd1c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::operator&lt;&lt;</definition>
        <argsstring>(const uint32_t &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="229" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="230" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a5630d8d3be85cc4c3f47e5e2c209567c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::operator&lt;&lt;</definition>
        <argsstring>(const int32_t &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const int32_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="250" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="251" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a10e34d406b70c7bd66f5dc5a4cb5f10a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::operator&lt;&lt;</definition>
        <argsstring>(const float &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const float &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="327" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="328" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1aa17d87bb40047f6f5fefa1463d8b96e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::operator&lt;&lt;</definition>
        <argsstring>(const double &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const double &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="334" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="335" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a762336f851f5a1b1d61acbdb13bd33bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::operator&lt;&lt;</definition>
        <argsstring>(const char *s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="345" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="346" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a3592211c1196d0601d482d61c7cb424f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::operator&lt;&lt;</definition>
        <argsstring>(const void *p)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>write the hex value of a pointer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a450c3c6d341e4b9745ac09427bcac199" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::operator&lt;&lt;</definition>
        <argsstring>(IOStream &amp;(*function)(IOStream &amp;))</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;(*)(<ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;)</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="364" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="365" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a496ce8b1ecebcce75d6347ccfc7c6365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::operator&lt;&lt;</definition>
        <argsstring>(const myfunc &amp;value)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const <ref refid="classmodm_1_1_i_o_stream_1a49b0b8fa73cc3a280495b7675c02c63d" kindref="member">myfunc</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="372" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a3513a4b7719ce46a5e6dfc0312a80efd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Ret</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::operator&lt;&lt;</definition>
        <argsstring>(Ret(*pointer)(Args...))</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>Ret(*)(Args...)</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
<para>Write the hex value of a function pointer, catches all kinds of function pointers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="377" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="378" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a0a25e55734176869c30b779bd6b92eb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::printf</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>printf</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>Format string </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="394" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1af52b1e90d3c9cf45a7549ef26b3e145f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::vprintf</definition>
        <argsstring>(const char *fmt, va_list vlist)</argsstring>
        <name>vprintf</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>vlist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="397" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1aaf078dad90fdcc4cf1800a889fe5f383" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::IOStream::writeInteger</definition>
        <argsstring>(int16_t value)</argsstring>
        <name>writeInteger</name>
        <param>
          <type>int16_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="401" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1acc33197569042e9e16eb24be567f1058" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::IOStream::writeInteger</definition>
        <argsstring>(uint16_t value)</argsstring>
        <name>writeInteger</name>
        <param>
          <type>uint16_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="404" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a338fca20bc6c8b2ae2cd6a5f1d6b9f5a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::IOStream::writeInteger</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>writeInteger</name>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="407" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a5afc2d3f981073de90f4a415fc004ce5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::IOStream::writeInteger</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>writeInteger</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="410" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1afcb72045183ed3845bbbffc3d014603d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::IOStream::writeInteger</definition>
        <argsstring>(int64_t value)</argsstring>
        <name>writeInteger</name>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="413" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a99842ae475bb837bc6202a7aafbb493c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::IOStream::writeInteger</definition>
        <argsstring>(uint64_t value)</argsstring>
        <name>writeInteger</name>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="416" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1aab161eac39561e7c1c9008ef2b00ce38" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::IOStream::writeHex</definition>
        <argsstring>(const char *s)</argsstring>
        <name>writeHex</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="419" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a3f40cd6d0a6cb866a5260a6a89bac45c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::IOStream::writeBin</definition>
        <argsstring>(const char *s)</argsstring>
        <name>writeBin</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="422" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1aec5b08eb9f646d300f3b38d7dab98d45" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::IOStream::writeHexNibble</definition>
        <argsstring>(uint8_t nibble)</argsstring>
        <name>writeHexNibble</name>
        <param>
          <type>uint8_t</type>
          <declname>nibble</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1afff8e68842ed4356f654a8c6f7da7eb6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::IOStream::writeHex</definition>
        <argsstring>(uint8_t value)</argsstring>
        <name>writeHex</name>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="428" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1adebab5541eb5e42bbf19348376cc210e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::IOStream::writeBin</definition>
        <argsstring>(uint8_t value)</argsstring>
        <name>writeBin</name>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="431" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a861e3fe1e1ea08c5023737c50e30667f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::IOStream::writeFloat</definition>
        <argsstring>(const float &amp;value)</argsstring>
        <name>writeFloat</name>
        <param>
          <type>const float &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="434" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a6505249c007f738cf9fc15dba0239e83" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::IOStream::writeUnsignedInteger</definition>
        <argsstring>(unsigned long unsignedValue, uint_fast8_t base, size_t width, char fill, bool isNegative)</argsstring>
        <name>writeUnsignedInteger</name>
        <param>
          <type>unsigned long</type>
          <declname>unsignedValue</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>base</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>char</type>
          <declname>fill</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isNegative</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="442" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a8249ffaa602a4fae3e635431b748f1f3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::IOStream::IOStream</definition>
        <argsstring>(const IOStream &amp;)</argsstring>
        <name>IOStream</name>
        <param>
          <type>const <ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="458" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_i_o_stream_1a1ce09599fc740fff1cf09da7e442b066" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; modm::IOStream::operator=</definition>
        <argsstring>(const IOStream &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="461" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This formats all primary types into a string stream for output or it reads values from a input and converts them to a given type;</para><para><simplesect kind="author"><para>Martin Rosekeit <ulink url="mailto:martin.rosekeit@rwth-aachen.de">martin.rosekeit@rwth-aachen.de</ulink> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1105">
        <label>modm::IOStream</label>
        <link refid="classmodm_1_1_i_o_stream"/>
      </node>
      <node id="1106">
        <label>modm::log::Logger</label>
        <link refid="classmodm_1_1log_1_1_logger"/>
        <childnode refid="1105" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" line="43" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/io/iostream.hpp" bodystart="42" bodyend="466"/>
    <listofallmembers>
      <member refid="classmodm_1_1_i_o_stream_1ab5a45629b6ac8a07828d31a417cae5f7" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>ascii</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a2ec24a2c020997b5704df1d9ac99264c" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>bin</name></member>
      <member refid="classmodm_1_1_i_o_stream_1ab049807b02e3bfa506927fcf2c04153e" prot="private" virt="non-virtual"><scope>modm::IOStream</scope><name>device</name></member>
      <member refid="classmodm_1_1_i_o_stream_1af67d8029d874a9f778eef28069f1d9c2" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>eof</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a3610c83f827855e9ea103c85bf45069e" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>flush</name></member>
      <member refid="classmodm_1_1_i_o_stream_1aa0e3a3af8ec3a8d8d3f62e94845f319b" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>get</name></member>
      <member refid="classmodm_1_1_i_o_stream_1ad2386cdd6a5a0775039755c4f7ea18af" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>get</name></member>
      <member refid="classmodm_1_1_i_o_stream_1ac425933869efdb3fa5058b1b040b6001" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>get</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a067f916e909f11b5c149d72a27d60b16" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>hex</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a64057d140a21785681e4385c66795245" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>IOStream</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a8249ffaa602a4fae3e635431b748f1f3" prot="private" virt="non-virtual"><scope>modm::IOStream</scope><name>IOStream</name></member>
      <member refid="classmodm_1_1_i_o_stream_1afe5f581da11424ade2fdef95646f94dd" prot="private" virt="non-virtual"><scope>modm::IOStream</scope><name>mode</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a0589c8e99811fbaad19d246f189303d6" prot="private" virt="non-virtual"><scope>modm::IOStream</scope><name>Mode</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a49b0b8fa73cc3a280495b7675c02c63d" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>myfunc</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a7b0b488829c7138e74d16aefe47c61de" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a0668abdde6faee6d888afcfd69e59866" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a87f8239c773bcaeed5e820afe9e66655" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a0d9e320adda5f3bfda2118a8926dbf19" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a3691a160fcf337996e425f5a8ecb7a0b" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a394222692f31c79e71992be1759cd1c3" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a5630d8d3be85cc4c3f47e5e2c209567c" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a10e34d406b70c7bd66f5dc5a4cb5f10a" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_i_o_stream_1aa17d87bb40047f6f5fefa1463d8b96e0" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a762336f851f5a1b1d61acbdb13bd33bb" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a3592211c1196d0601d482d61c7cb424f" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a450c3c6d341e4b9745ac09427bcac199" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a496ce8b1ecebcce75d6347ccfc7c6365" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a3513a4b7719ce46a5e6dfc0312a80efd" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a1ce09599fc740fff1cf09da7e442b066" prot="private" virt="non-virtual"><scope>modm::IOStream</scope><name>operator=</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a0a25e55734176869c30b779bd6b92eb7" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>printf</name></member>
      <member refid="classmodm_1_1_i_o_stream_1af52b1e90d3c9cf45a7549ef26b3e145f" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>vprintf</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a58090461890e8414dc84f0c860300f6a" prot="public" virt="non-virtual"><scope>modm::IOStream</scope><name>write</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a3f40cd6d0a6cb866a5260a6a89bac45c" prot="protected" virt="non-virtual"><scope>modm::IOStream</scope><name>writeBin</name></member>
      <member refid="classmodm_1_1_i_o_stream_1adebab5541eb5e42bbf19348376cc210e" prot="protected" virt="non-virtual"><scope>modm::IOStream</scope><name>writeBin</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a861e3fe1e1ea08c5023737c50e30667f" prot="protected" virt="non-virtual"><scope>modm::IOStream</scope><name>writeFloat</name></member>
      <member refid="classmodm_1_1_i_o_stream_1aab161eac39561e7c1c9008ef2b00ce38" prot="protected" virt="non-virtual"><scope>modm::IOStream</scope><name>writeHex</name></member>
      <member refid="classmodm_1_1_i_o_stream_1afff8e68842ed4356f654a8c6f7da7eb6" prot="protected" virt="non-virtual"><scope>modm::IOStream</scope><name>writeHex</name></member>
      <member refid="classmodm_1_1_i_o_stream_1aec5b08eb9f646d300f3b38d7dab98d45" prot="protected" virt="non-virtual"><scope>modm::IOStream</scope><name>writeHexNibble</name></member>
      <member refid="classmodm_1_1_i_o_stream_1aaf078dad90fdcc4cf1800a889fe5f383" prot="protected" virt="non-virtual"><scope>modm::IOStream</scope><name>writeInteger</name></member>
      <member refid="classmodm_1_1_i_o_stream_1acc33197569042e9e16eb24be567f1058" prot="protected" virt="non-virtual"><scope>modm::IOStream</scope><name>writeInteger</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a338fca20bc6c8b2ae2cd6a5f1d6b9f5a" prot="protected" virt="non-virtual"><scope>modm::IOStream</scope><name>writeInteger</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a5afc2d3f981073de90f4a415fc004ce5" prot="protected" virt="non-virtual"><scope>modm::IOStream</scope><name>writeInteger</name></member>
      <member refid="classmodm_1_1_i_o_stream_1afcb72045183ed3845bbbffc3d014603d" prot="protected" virt="non-virtual"><scope>modm::IOStream</scope><name>writeInteger</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a99842ae475bb837bc6202a7aafbb493c" prot="protected" virt="non-virtual"><scope>modm::IOStream</scope><name>writeInteger</name></member>
      <member refid="classmodm_1_1_i_o_stream_1a6505249c007f738cf9fc15dba0239e83" prot="protected" virt="non-virtual"><scope>modm::IOStream</scope><name>writeUnsignedInteger</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
