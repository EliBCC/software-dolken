<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classmodm_1_1platform_1_1_usart1" kind="class" language="C++" prot="public">
    <compoundname>modm::platform::Usart1</compoundname>
    <basecompoundref refid="classmodm_1_1platform_1_1_uart_base" prot="public" virt="non-virtual">modm::platform::UartBase</basecompoundref>
    <basecompoundref refid="classmodm_1_1_uart" prot="public" virt="non-virtual">modm::Uart</basecompoundref>
    <includes refid="uart__1_8hpp" local="no">modm/platform/uart/uart_1.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_usart1_1a910fc9bfefdf0c391f3f1942a6c796bd" prot="public" static="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t modm::platform::Usart1::RxBufferSize</definition>
        <argsstring></argsstring>
        <name>RxBufferSize</name>
        <initializer>= 16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="48" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_usart1_1aea04850dbb73a847ce2638479b4adbbe" prot="public" static="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t modm::platform::Usart1::TxBufferSize</definition>
        <argsstring></argsstring>
        <name>TxBufferSize</name>
        <initializer>= 250</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="49" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_usart1_1a8d7f85da9d0765e9a9f1664a77f1cde7" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Usart1::initializeBuffered</definition>
        <argsstring>(uint32_t interruptPriority)</argsstring>
        <name>initializeBuffered</name>
        <param>
          <type>uint32_t</type>
          <declname>interruptPriority</declname>
        </param>
        <briefdescription>
<para>Second stage initialize for buffered uart. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="45" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_usart1_1a30cd5f72bf630ed86f074b84c82dde92" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; Peripheral _ &gt; class...</type>
            <declname>Signals</declname>
            <defname>Signals</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void modm::platform::Usart1::connect</definition>
        <argsstring>(Gpio::InputType InputTypeRx=Gpio::InputType::PullUp)</argsstring>
        <name>connect</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" kindref="member">Gpio::InputType</ref></type>
          <declname>InputTypeRx</declname>
          <defval><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6dadbe269e26d8282186a4163a2424e3361" kindref="member">Gpio::InputType::PullUp</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="54" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" bodystart="54" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_usart1_1abc9c3e3a3b760d10e1cb74528cb6ca2e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SystemClock</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>baudrate</declname>
            <defname>baudrate</defname>
          </param>
          <param>
            <type>uint16_t</type>
            <declname>tolerance</declname>
            <defname>tolerance</defname>
            <defval><ref refid="classmodm_1_1_tolerance_1accab2e94e360437a5f35491641e61756" kindref="member">modm::Tolerance::OnePercent</ref></defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void modm::platform::Usart1::initialize</definition>
        <argsstring>(uint32_t interruptPriority=12, Parity parity=Parity::Disabled)</argsstring>
        <name>initialize</name>
        <param>
          <type>uint32_t</type>
          <declname>interruptPriority</declname>
          <defval>12</defval>
        </param>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_uart_base_1a598033b30db9a90ea5c34a7b1cdc41e1" kindref="member">Parity</ref></type>
          <declname>parity</declname>
          <defval><ref refid="classmodm_1_1platform_1_1_uart_base_1a598033b30db9a90ea5c34a7b1cdc41e1ab9f5c797ebbf55adccdd8539a65a0241" kindref="member">Parity::Disabled</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="72" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" bodystart="72" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_usart1_1abbf3368918180ecca0ab1c9bbed66731" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Usart1::writeBlocking</definition>
        <argsstring>(uint8_t data)</argsstring>
        <name>writeBlocking</name>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_usart1_1a7d892e89649eef77a8a6743f7da11228" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Usart1::writeBlocking</definition>
        <argsstring>(const uint8_t *data, std::size_t length)</argsstring>
        <name>writeBlocking</name>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_usart1_1a1dd4e6a7c04d2c32c8238381431f8eeb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Usart1::flushWriteBuffer</definition>
        <argsstring>()</argsstring>
        <name>flushWriteBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_usart1_1aef6c5550c302183f325622e9d6ebfa48" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::Usart1::write</definition>
        <argsstring>(uint8_t data)</argsstring>
        <name>write</name>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_usart1_1af4feb2ece9962465c3b95ca09e06ae93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static std::size_t modm::platform::Usart1::write</definition>
        <argsstring>(const uint8_t *data, std::size_t length)</argsstring>
        <name>write</name>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_usart1_1ab8778052a8f2484024dcc408f4116b39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::Usart1::isWriteFinished</definition>
        <argsstring>()</argsstring>
        <name>isWriteFinished</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_usart1_1a5127e135554d646758c24671d8106099" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static std::size_t modm::platform::Usart1::discardTransmitBuffer</definition>
        <argsstring>()</argsstring>
        <name>discardTransmitBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_usart1_1ace7e346ecdd49d1041d3dd1a04249fab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::Usart1::read</definition>
        <argsstring>(uint8_t &amp;data)</argsstring>
        <name>read</name>
        <param>
          <type>uint8_t &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_usart1_1aa31eb9a380d614028d3cb9a93aae9371" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static std::size_t modm::platform::Usart1::read</definition>
        <argsstring>(uint8_t *buffer, std::size_t length)</argsstring>
        <name>read</name>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_usart1_1a7fe82dc44fbcd11b26a6233ca81288aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static std::size_t modm::platform::Usart1::discardReceiveBuffer</definition>
        <argsstring>()</argsstring>
        <name>discardReceiveBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="113" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Universal asynchronous receiver transmitter (USART1)</para><para><simplesect kind="author"><para>Kevin Laeufer </para></simplesect>
<simplesect kind="author"><para>Niklas Hauser </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1293">
        <label>modm::PeripheralDriver</label>
        <link refid="classmodm_1_1_peripheral_driver"/>
      </node>
      <node id="1291">
        <label>modm::platform::UartBase</label>
        <link refid="classmodm_1_1platform_1_1_uart_base"/>
      </node>
      <node id="1290">
        <label>modm::platform::Usart1</label>
        <link refid="classmodm_1_1platform_1_1_usart1"/>
        <childnode refid="1291" relation="public-inheritance">
        </childnode>
        <childnode refid="1292" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1292">
        <label>modm::Uart</label>
        <link refid="classmodm_1_1_uart"/>
        <childnode refid="1293" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1297">
        <label>modm::PeripheralDriver</label>
        <link refid="classmodm_1_1_peripheral_driver"/>
      </node>
      <node id="1295">
        <label>modm::platform::UartBase</label>
        <link refid="classmodm_1_1platform_1_1_uart_base"/>
      </node>
      <node id="1294">
        <label>modm::platform::Usart1</label>
        <link refid="classmodm_1_1platform_1_1_usart1"/>
        <childnode refid="1295" relation="public-inheritance">
        </childnode>
        <childnode refid="1296" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1296">
        <label>modm::Uart</label>
        <link refid="classmodm_1_1_uart"/>
        <childnode refid="1297" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" line="40" column="1" bodyfile="C:/Users/jakob/OneDrive/Dokumenter/GitHub/Software-dolken/modm/src/modm/platform/uart/uart_1.hpp" bodystart="39" bodyend="115"/>
    <listofallmembers>
      <member refid="classmodm_1_1_peripheral_driver_1a5c336ff9889c347e7eadb810bf984ebd" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>assertBaudrateInTolerance</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0aa1d9c6947191649c499108ec3905f12f" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B1000000</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0a70ddfeda6ec96e7d191735987b1c6c79" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B115200</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0adb5e75b2e45dfb1e316cfc95cd12c21e" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B1200</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0a26c23f61418462ed949df5b738ec9b81" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B14400</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0a58fca46588de3baf569f114f3897c091" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B1800</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0ad7dd5711dc7f47b91cfffef3b22a0eac" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B19200</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0a2aa23eda423fea97cf334b01ec8231f2" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B230400</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0a34fbcb9e42e1d75ba89bdec667981813" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B2400</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0a95095fb00f2e967f07508f58df01705f" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B250000</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0adb0ac706a5fe97b17df9890267e8138d" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B28800</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0aa8624446f0ddaf0af752669484a0bc75" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B300</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0ab884f5025d0734e3f6b401931f18dd29" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B38400</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0adbc8afa89adb698ab563c39c73c753ba" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B4800</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0a67763fd5702f4c11ea9abe7c2fb149b7" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B500000</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0af14e0c1e43d7aeb6741d90a7ba78444a" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B57600</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0a81c326634954f134382f7524ef2116ee" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B600</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0af21ef91f5fb886a95c21083d13cba417" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B76800</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0a37f4d954ac3abea7cbe02ce6037ca6d4" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>B9600</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>Baudrate</name></member>
      <member refid="classmodm_1_1platform_1_1_usart1_1a30cd5f72bf630ed86f074b84c82dde92" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>connect</name></member>
      <member refid="classmodm_1_1_uart_1aa04c6a1afbfb99eb8cd4d0b8d4e004d8" prot="public" virt="non-virtual" ambiguityscope="modm::Uart::"><scope>modm::platform::Usart1</scope><name>connect</name></member>
      <member refid="classmodm_1_1platform_1_1_usart1_1a7fe82dc44fbcd11b26a6233ca81288aa" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>discardReceiveBuffer</name></member>
      <member refid="classmodm_1_1platform_1_1_usart1_1a5127e135554d646758c24671d8106099" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>discardTransmitBuffer</name></member>
      <member refid="classmodm_1_1platform_1_1_usart1_1a1dd4e6a7c04d2c32c8238381431f8eeb" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>flushWriteBuffer</name></member>
      <member refid="classmodm_1_1platform_1_1_usart1_1abc9c3e3a3b760d10e1cb74528cb6ca2e" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>initialize</name></member>
      <member refid="classmodm_1_1_uart_1a3efec27dfb4b49dcc5887e5cdf9e1566" prot="public" virt="non-virtual" ambiguityscope="modm::Uart::"><scope>modm::platform::Usart1</scope><name>initialize</name></member>
      <member refid="classmodm_1_1platform_1_1_usart1_1a8d7f85da9d0765e9a9f1664a77f1cde7" prot="private" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>initializeBuffered</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1ac9c1bc3b77588a11d520416c22a25832" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>Interrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1a6ebe84a6b410051751c29464340e395f" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>Interrupt_t</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1a231dd8ca89bde31fb9bec6a65c1dae8f" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>InterruptFlag</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1a918f65a6ffc3f0f1a6c64b9088e4dc5b" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>InterruptFlag_t</name></member>
      <member refid="classmodm_1_1platform_1_1_usart1_1ab8778052a8f2484024dcc408f4116b39" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>isWriteFinished</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0a9a79abc00903fec3fba5863bcf0eaad4" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>kBps250</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0a5efd6fc6a5d3866096d58b71fedd77e1" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>kBps500</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1ace789bf4bb98f058efde7ab625f10e0a" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>LastBitClockPulse</name></member>
      <member refid="classmodm_1_1_uart_1a996192afb0856d933a86a902fcf463d0a399e9b01dd21af87d666b2749c312cd8" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>MBps1</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1a7dd12333d203f746bca00aedd0d23d05" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>OversamplingMode</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1a598033b30db9a90ea5c34a7b1cdc41e1" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>Parity</name></member>
      <member refid="classmodm_1_1platform_1_1_usart1_1ace7e346ecdd49d1041d3dd1a04249fab" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>read</name></member>
      <member refid="classmodm_1_1platform_1_1_usart1_1aa31eb9a380d614028d3cb9a93aae9371" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>read</name></member>
      <member refid="classmodm_1_1platform_1_1_usart1_1a910fc9bfefdf0c391f3f1942a6c796bd" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>RxBufferSize</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1aa946086fdf30e477d0a317d657c4e44f" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>SpiClock</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1abb9ae2af6239db1ae39f2a789989e03c" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>SpiDataMode</name></member>
      <member refid="classmodm_1_1platform_1_1_usart1_1aea04850dbb73a847ce2638479b4adbbe" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>TxBufferSize</name></member>
      <member refid="classmodm_1_1platform_1_1_usart1_1aef6c5550c302183f325622e9d6ebfa48" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>write</name></member>
      <member refid="classmodm_1_1platform_1_1_usart1_1af4feb2ece9962465c3b95ca09e06ae93" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>write</name></member>
      <member refid="classmodm_1_1platform_1_1_usart1_1abbf3368918180ecca0ab1c9bbed66731" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>writeBlocking</name></member>
      <member refid="classmodm_1_1platform_1_1_usart1_1a7d892e89649eef77a8a6743f7da11228" prot="public" virt="non-virtual"><scope>modm::platform::Usart1</scope><name>writeBlocking</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
